syntax = "proto3";

package notification;

option go_package = "internal-support-system/proto/notification";

service NotificationService {
  rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse);
  rpc GetNotifications(GetNotificationsRequest) returns (GetNotificationsResponse);
  rpc MarkAsRead(MarkAsReadRequest) returns (MarkAsReadResponse);
  rpc CreateTemplate(CreateTemplateRequest) returns (CreateTemplateResponse);
  rpc UpdateTemplate(UpdateTemplateRequest) returns (UpdateTemplateResponse);
}

enum NotificationType {
  EMAIL = 0;
  SLACK = 1;
  IN_APP = 2;
}

enum NotificationPriority {
  INFO = 0;
  WARNING = 1;
  CRITICAL = 2;
}

message Notification {
  string id = 1;
  string user_id = 2;
  string title = 3;
  string message = 4;
  NotificationType type = 5;
  NotificationPriority priority = 6;
  bool read = 7;
  string created_at = 8;
  string read_at = 9;
  map<string, string> metadata = 10;
}

message NotificationTemplate {
  string id = 1;
  string name = 2;
  string subject = 3;
  string body = 4;
  NotificationType type = 5;
  map<string, string> variables = 6;
  string created_at = 7;
  string updated_at = 8;
}

message SendNotificationRequest {
  string user_id = 1;
  string title = 2;
  string message = 3;
  NotificationType type = 4;
  NotificationPriority priority = 5;
  map<string, string> metadata = 6;
  string template_id = 7;
  map<string, string> template_variables = 8;
}

message SendNotificationResponse {
  Notification notification = 1;
  bool sent = 2;
}

message GetNotificationsRequest {
  string user_id = 1;
  bool unread_only = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GetNotificationsResponse {
  repeated Notification notifications = 1;
  int32 total = 2;
  int32 unread_count = 3;
}

message MarkAsReadRequest {
  string notification_id = 1;
  string user_id = 2;
}

message MarkAsReadResponse {
  bool success = 1;
}

message CreateTemplateRequest {
  string name = 1;
  string subject = 2;
  string body = 3;
  NotificationType type = 4;
  map<string, string> variables = 5;
}

message CreateTemplateResponse {
  NotificationTemplate template = 1;
}

message UpdateTemplateRequest {
  string id = 1;
  string name = 2;
  string subject = 3;
  string body = 4;
  NotificationType type = 5;
  map<string, string> variables = 6;
}

message UpdateTemplateResponse {
  NotificationTemplate template = 1;
} 